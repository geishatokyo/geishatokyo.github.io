---
title: ScalaとRubyどっちがいいの？
date: 2014-04-10
tags: Scala
authors: takezoux2
---
 
<h2>– PR –</h2>
<p style="background:#fafad2;">
芸者東京で隔週水曜にScalaの勉強会を開催しています。<br/>
上級者の方から、Scalaを使い始めた方、興味を持っている方などどなたでもウェルカムですのでふるってご参加下さい。<br/>
勉強会への参加登録は、<a href="http://rpscala.doorkeeper.jp/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://rpscala.doorkeeper.jp']);">DoorKeeper</a>のほうで行っています。
</p>
<hr/>
<p>第123回Scala勉強会で出た、<br/>
<span style="font-size: 20px;background:#ffffe0;">「Webサービスを作るにあたってScalaとRubyのどちらで作った方がいいのか?」</span><br/>
という質問に対する参加者の解答まとめです。</p>
<h1>結論</h1>
<p style="font-size: 20px;background:#ffffe0;">その会社の目指すところ、状況によってかわってくるため、慎重に選びましょう！</p>
<p>ということです。選ぶポイントとしては次のような感じになっています。</p>
<h3>1. 人材採用</h3>
<p>Scala、Rubyを使える人数を比較すると、Rubyのほうが圧倒的に多いため人材確保を考えるとRubyのほうが良いだろう。<br/>
ただし、Scalaを使える人なら技術力が高い人が多いため、精鋭を集めたいならScalaのほうが良いかも。</p>
<h3>2. パフォーマンス</h3>
<p>サーバー単体の場合はScalaで書いたほうがだいたいの場合では速いが、<br/>
実際は、実装によって大きくかわるのと、通常はスケールアウトが前提となるためサーバー単体での速さはそこまでは重要ではない。<br/>
むしろ、スケールアウトを行うにあたって、インフラエンジニアのスキルにあっているほうが良いだろう。</p>
<h3>3. 開発効率</h3>
<p>やはり初期はRuby(もといRuby on Rails)の開発効率は非常に高いが、開発規模が大きくなり行数が増え、人数が増加してくると、リファクタリングやユニットテストの理由などによりScalaのほうが開発効率が良くなる。</p>
<h4>3-1. リファクタリング</h4>
<p>Scalaの場合は、コンパイラーによりチェックが入るためクラス、メソッド、変数名の変更を安心して行うことが出来る。<br/>
Rubyの場合は、テストがしっかり書かれていないと安心して行えない。</p>
<h4>3-2. ユニットテスト</h4>
<p>Rubyの場合はTypoでプログラムが死ぬ場合も多く、リファクタリングのことも考えるとしっかりとテストを書く必要がある。<br/>
Scalaの場合は、ロジックに関するテストだけを書けば良いため、Rubyよりはユニットテスト量は少なくて済む。</p>
<h3>4. 好み</h3>
<p>メインになるエンジニアが好むものを使ったほうが、モチベもあがるし良いだろう。</p>
<hr/>
<p>ちなみに弊社(芸者東京エンターテインメント)では、</p>
<ol>
<li>優秀な人材を取りたい</li>
<li>パフォーマンスが良さそうなほうがいいよね</li>
<li>最終的には大規模なプロジェクトになることが多い+ゲーム開発で、仕様変更が頻繁に発生してユニットテストを全部書いていられない</li>
<li>静的言語好き</li>
</ol>
<p>なため、Scalaの採用は妥当かなっといった感じです。</p>
							